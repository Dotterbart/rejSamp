{
    "contents" : "context(\"rejSamp\")\n\nfunExp = function(fun, min, max) {\n  div = integrate(fun, min, max)$value\n  fun2 = function(x) x * fun(x) / div\n  return(integrate(fun2, min, max)$value)\n}\nfun1 = function(x) x\nfun2 = function(x) dunif(x, 1, 5)\nfun3 = function() runif(1, 1, 5)\nfun4 = function() runif(7, 1, 5)\nxxx <- \"Hello\"\n\nset.seed(9247)\n\ntest_that(\"rejSamp\", {\n  expect_true(is.numeric(rejSamp(fun1, 10, -5000, 5000)))\n  expect_error(rejSamp(fun1, 0, -5000, 5000))\n  expect_error(rejSamp(fun1, 2.5, -5000, 5000))\n  expect_error(rejSamp(fun1, 10, -Inf, 5000))\n  expect_error(rejSamp(xxx, 10, -5000, 5000))\n  expect_warning(rejSamp(fun1, 10, 5000, -5000))\n  expect_true(is.numeric(rejSamp(fun1, 10, 1, 5, fun2, fun3, 20)))\n  expect_error(rejsamp(fun1, 10, 1, 5, fun2, fun3, 1e-7))\n  expect_error(rejsamp(fun1, 10, 1, 5, xxx, fun3, 20))\n  expect_error(rejsamp(fun1, 10, 1, 5, fun2, xxx, 20))\n  expect_error(rejsamp(fun1, 10, 1, 5, fun2, fun4, 20))\n  expect_that(mean(rejSamp(fun1, 10000, 1, 5)), is_less_than(1.03 * funExp(fun1, 1, 5)))\n  expect_that(mean(rejSamp(fun1, 10000, 1, 5)), is_more_than(0.97 * funExp(fun1, 1, 5)))\n})\n",
    "created" : 1445603889597.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1906994087",
    "id" : "CDA27F6D",
    "lastKnownWriteTime" : 1446981902,
    "path" : "~/GitHub/rejSamp/tests/testthat/test_rejSamp.R",
    "project_path" : "tests/testthat/test_rejSamp.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}